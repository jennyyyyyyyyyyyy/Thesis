// Generated by view binder compiler. Do not edit!
package thesis.filconnected.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import thesis.filconnected.R;

public final class ActivityTextToFsl1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ReusableTopUiBinding customToolbar;

  @NonNull
  public final LinearLayout iconSection;

  @NonNull
  public final LinearLayout output;

  @NonNull
  public final ImageView searchButton;

  @NonNull
  public final TextView userTextDisplay;

  @NonNull
  public final VideoView videoView;

  private ActivityTextToFsl1Binding(@NonNull ConstraintLayout rootView,
      @NonNull ReusableTopUiBinding customToolbar, @NonNull LinearLayout iconSection,
      @NonNull LinearLayout output, @NonNull ImageView searchButton,
      @NonNull TextView userTextDisplay, @NonNull VideoView videoView) {
    this.rootView = rootView;
    this.customToolbar = customToolbar;
    this.iconSection = iconSection;
    this.output = output;
    this.searchButton = searchButton;
    this.userTextDisplay = userTextDisplay;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTextToFsl1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTextToFsl1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_text_to_fsl1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTextToFsl1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.custom_toolbar;
      View customToolbar = ViewBindings.findChildViewById(rootView, id);
      if (customToolbar == null) {
        break missingId;
      }
      ReusableTopUiBinding binding_customToolbar = ReusableTopUiBinding.bind(customToolbar);

      id = R.id.icon_section;
      LinearLayout iconSection = ViewBindings.findChildViewById(rootView, id);
      if (iconSection == null) {
        break missingId;
      }

      id = R.id.output;
      LinearLayout output = ViewBindings.findChildViewById(rootView, id);
      if (output == null) {
        break missingId;
      }

      id = R.id.search_button;
      ImageView searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.user_text_display;
      TextView userTextDisplay = ViewBindings.findChildViewById(rootView, id);
      if (userTextDisplay == null) {
        break missingId;
      }

      id = R.id.video_view;
      VideoView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new ActivityTextToFsl1Binding((ConstraintLayout) rootView, binding_customToolbar,
          iconSection, output, searchButton, userTextDisplay, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
