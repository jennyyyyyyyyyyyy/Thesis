// Generated by view binder compiler. Do not edit!
package thesis.filconnected.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import thesis.filconnected.R;

public final class ActivityApOneBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnStart;

  @NonNull
  public final ImageView cameraImage;

  @NonNull
  public final ReusableTopUiBinding customToolbar;

  @NonNull
  public final FragmentContainerView fragmentContainer;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout topBox;

  private ActivityApOneBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnStart,
      @NonNull ImageView cameraImage, @NonNull ReusableTopUiBinding customToolbar,
      @NonNull FragmentContainerView fragmentContainer, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout topBox) {
    this.rootView = rootView;
    this.btnStart = btnStart;
    this.cameraImage = cameraImage;
    this.customToolbar = customToolbar;
    this.fragmentContainer = fragmentContainer;
    this.linearLayout2 = linearLayout2;
    this.topBox = topBox;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityApOneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityApOneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ap_one, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityApOneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_start;
      Button btnStart = ViewBindings.findChildViewById(rootView, id);
      if (btnStart == null) {
        break missingId;
      }

      id = R.id.camera_image;
      ImageView cameraImage = ViewBindings.findChildViewById(rootView, id);
      if (cameraImage == null) {
        break missingId;
      }

      id = R.id.custom_toolbar;
      View customToolbar = ViewBindings.findChildViewById(rootView, id);
      if (customToolbar == null) {
        break missingId;
      }
      ReusableTopUiBinding binding_customToolbar = ReusableTopUiBinding.bind(customToolbar);

      id = R.id.fragment_container;
      FragmentContainerView fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.top_box;
      LinearLayout topBox = ViewBindings.findChildViewById(rootView, id);
      if (topBox == null) {
        break missingId;
      }

      return new ActivityApOneBinding((ConstraintLayout) rootView, btnStart, cameraImage,
          binding_customToolbar, fragmentContainer, linearLayout2, topBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
