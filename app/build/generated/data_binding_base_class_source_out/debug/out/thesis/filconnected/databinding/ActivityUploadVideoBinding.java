// Generated by view binder compiler. Do not edit!
package thesis.filconnected.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import thesis.filconnected.R;

public final class ActivityUploadVideoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton addVideoButton;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final LinearLayout center;

  @NonNull
  public final EditText etInput;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView selectedFilePath;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final Spinner videoCategoryInput;

  private ActivityUploadVideoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton addVideoButton, @NonNull Button btnSubmit, @NonNull LinearLayout center,
      @NonNull EditText etInput, @NonNull LinearLayout linear, @NonNull RecyclerView recyclerView,
      @NonNull TextView selectedFilePath, @NonNull TextView titleText,
      @NonNull Spinner videoCategoryInput) {
    this.rootView = rootView;
    this.addVideoButton = addVideoButton;
    this.btnSubmit = btnSubmit;
    this.center = center;
    this.etInput = etInput;
    this.linear = linear;
    this.recyclerView = recyclerView;
    this.selectedFilePath = selectedFilePath;
    this.titleText = titleText;
    this.videoCategoryInput = videoCategoryInput;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_video_button;
      ImageButton addVideoButton = ViewBindings.findChildViewById(rootView, id);
      if (addVideoButton == null) {
        break missingId;
      }

      id = R.id.btn_submit;
      Button btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.center;
      LinearLayout center = ViewBindings.findChildViewById(rootView, id);
      if (center == null) {
        break missingId;
      }

      id = R.id.et_input;
      EditText etInput = ViewBindings.findChildViewById(rootView, id);
      if (etInput == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.selected_file_path;
      TextView selectedFilePath = ViewBindings.findChildViewById(rootView, id);
      if (selectedFilePath == null) {
        break missingId;
      }

      id = R.id.title_text;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.video_category_input;
      Spinner videoCategoryInput = ViewBindings.findChildViewById(rootView, id);
      if (videoCategoryInput == null) {
        break missingId;
      }

      return new ActivityUploadVideoBinding((ConstraintLayout) rootView, addVideoButton, btnSubmit,
          center, etInput, linear, recyclerView, selectedFilePath, titleText, videoCategoryInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
