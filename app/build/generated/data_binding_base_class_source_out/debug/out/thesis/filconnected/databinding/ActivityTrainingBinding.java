// Generated by view binder compiler. Do not edit!
package thesis.filconnected.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import thesis.filconnected.R;

public final class ActivityTrainingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout btnAddLabel;

  @NonNull
  public final Button btnStartTraining;

  @NonNull
  public final LinearLayout middle;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView title;

  private ActivityTrainingBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout btnAddLabel, @NonNull Button btnStartTraining,
      @NonNull LinearLayout middle, @NonNull RecyclerView recyclerView, @NonNull TextView title) {
    this.rootView = rootView;
    this.btnAddLabel = btnAddLabel;
    this.btnStartTraining = btnStartTraining;
    this.middle = middle;
    this.recyclerView = recyclerView;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTrainingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTrainingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_training, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTrainingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddLabel;
      LinearLayout btnAddLabel = ViewBindings.findChildViewById(rootView, id);
      if (btnAddLabel == null) {
        break missingId;
      }

      id = R.id.btnStartTraining;
      Button btnStartTraining = ViewBindings.findChildViewById(rootView, id);
      if (btnStartTraining == null) {
        break missingId;
      }

      id = R.id.middle;
      LinearLayout middle = ViewBindings.findChildViewById(rootView, id);
      if (middle == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityTrainingBinding((ConstraintLayout) rootView, btnAddLabel, btnStartTraining,
          middle, recyclerView, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
